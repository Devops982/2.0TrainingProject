{"ast":null,"code":"import _slicedToArray from\"E:/React Projects/007_React2.0 TrainingProjects/myapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import JsonData from\"./usedata.json\";// Importing sample data from a JSON file\nimport ReactPaginate from\"react-paginate\";/**\r\n * Pagination Component for displaying a list of users with pagination.\r\n * Uses ReactPaginate for page navigation.\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Pagination(){// State for the list of users and current page number\nvar _useState=useState(JsonData.slice(0,50)),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];// Initial user data, sliced to limit the number of displayed users\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),pageNumber=_useState4[0],setPageNumber=_useState4[1];// Number of users to display per page and calculation for the range of users to display\nvar usersPerPage=10;// Number of users to display on each page\nvar pagesVisited=pageNumber*usersPerPage;// Index of the first user on the current page\n// Map and display the users for the current page\nvar displayUsers=users.slice(pagesVisited,pagesVisited+usersPerPage).map(function(user){return/*#__PURE__*/_jsxs(\"div\",{className:\"user\",children:[/*#__PURE__*/_jsx(\"h3\",{children:user.firstName}),/*#__PURE__*/_jsx(\"h3\",{children:user.lastName}),/*#__PURE__*/_jsx(\"h3\",{children:user.email})]},user.id);});// Calculate the total number of pages based on the user data\nvar pageCount=Math.ceil(users.length/usersPerPage);// Function to change the current page when a pagination button is clicked\nvar changePage=function changePage(_ref){var selected=_ref.selected;setPageNumber(selected);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{class:\"m-6 block rounded-lg bg-white p-6 shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:bg-neutral-700\",children:[/*#__PURE__*/_jsx(\"h5\",{class:\"mb-2 text-xl font-medium leading-tight text-neutral-800 dark:text-neutral-50\",children:\"Card title\"}),/*#__PURE__*/_jsxs(\"p\",{class:\"mb-4 text-base text-neutral-600 dark:text-neutral-200\",children:[displayUsers,/*#__PURE__*/_jsx(ReactPaginate,{previousLabel:\"Previous\",nextLabel:\"Next\",pageCount:pageCount// Total number of pages\n,onPageChange:changePage// Function to handle page changes\n,containerClassName:\"paginationBttns\"// CSS class for the pagination container\n,previousLinkClassName:\"previousBttn\"// CSS class for the \"Previous\" button\n,nextLinkClassName:\"nextBttn\"// CSS class for the \"Next\" button\n})]})]})});}export default Pagination;","map":{"version":3,"names":["React","useState","JsonData","ReactPaginate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Pagination","_useState","slice","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","pageNumber","setPageNumber","usersPerPage","pagesVisited","displayUsers","map","user","className","children","firstName","lastName","email","id","pageCount","Math","ceil","length","changePage","_ref","selected","class","previousLabel","nextLabel","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName"],"sources":["E:/React Projects/007_React2.0 TrainingProjects/myapp/src/Components/Pagination/Pagination.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport JsonData from \"./usedata.json\"; // Importing sample data from a JSON file\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n/**\r\n * Pagination Component for displaying a list of users with pagination.\r\n * Uses ReactPaginate for page navigation.\r\n */\r\nfunction Pagination() {\r\n  // State for the list of users and current page number\r\n  const [users, setUsers] = useState(JsonData.slice(0, 50)); // Initial user data, sliced to limit the number of displayed users\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n\r\n  // Number of users to display per page and calculation for the range of users to display\r\n  const usersPerPage = 10; // Number of users to display on each page\r\n  const pagesVisited = pageNumber * usersPerPage; // Index of the first user on the current page\r\n\r\n  // Map and display the users for the current page\r\n  const displayUsers = users\r\n    .slice(pagesVisited, pagesVisited + usersPerPage)\r\n    .map((user) => {\r\n      return (\r\n        <div className=\"user\" key={user.id}>\r\n          <h3>{user.firstName}</h3>\r\n          <h3>{user.lastName}</h3>\r\n          <h3>{user.email}</h3>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  // Calculate the total number of pages based on the user data\r\n  const pageCount = Math.ceil(users.length / usersPerPage);\r\n\r\n  // Function to change the current page when a pagination button is clicked\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"m-6 block rounded-lg bg-white p-6 shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:bg-neutral-700\">\r\n        <h5 class=\"mb-2 text-xl font-medium leading-tight text-neutral-800 dark:text-neutral-50\">\r\n          Card title\r\n        </h5>\r\n        <p class=\"mb-4 text-base text-neutral-600 dark:text-neutral-200\">\r\n          {displayUsers}\r\n          {/* ReactPaginate component for page navigation */}\r\n          <ReactPaginate\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            pageCount={pageCount} // Total number of pages\r\n            onPageChange={changePage} // Function to handle page changes\r\n            containerClassName={\"paginationBttns\"} // CSS class for the pagination container\r\n            previousLinkClassName={\"previousBttn\"} // CSS class for the \"Previous\" button\r\n            nextLinkClassName={\"nextBttn\"} // CSS class for the \"Next\" button\r\n          />\r\n        </p>\r\n      </div>\r\n\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n"],"mappings":"2IAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CAAE;AACvC,MAAO,CAAAC,aAAa,KAAM,gBAAgB,CAE1C;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAIA,QAAS,CAAAC,UAAUA,CAAA,CAAG,CACpB;AACA,IAAAC,SAAA,CAA0BV,QAAQ,CAACC,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CAAAC,UAAA,CAAAC,cAAA,CAAAH,SAAA,IAAlDI,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAAqC;AAC3D,IAAAI,UAAA,CAAoChB,QAAQ,CAAC,CAAC,CAAC,CAAAiB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAxCE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAEhC;AACA,GAAM,CAAAG,YAAY,CAAG,EAAE,CAAE;AACzB,GAAM,CAAAC,YAAY,CAAGH,UAAU,CAAGE,YAAY,CAAE;AAEhD;AACA,GAAM,CAAAE,YAAY,CAAGR,KAAK,CACvBH,KAAK,CAACU,YAAY,CAAEA,YAAY,CAAGD,YAAY,CAAC,CAChDG,GAAG,CAAC,SAACC,IAAI,CAAK,CACb,mBACElB,KAAA,QAAKmB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBtB,IAAA,OAAAsB,QAAA,CAAKF,IAAI,CAACG,SAAS,CAAK,CAAC,cACzBvB,IAAA,OAAAsB,QAAA,CAAKF,IAAI,CAACI,QAAQ,CAAK,CAAC,cACxBxB,IAAA,OAAAsB,QAAA,CAAKF,IAAI,CAACK,KAAK,CAAK,CAAC,GAHIL,IAAI,CAACM,EAI3B,CAAC,CAEV,CAAC,CAAC,CAEJ;AACA,GAAM,CAAAC,SAAS,CAAGC,IAAI,CAACC,IAAI,CAACnB,KAAK,CAACoB,MAAM,CAAGd,YAAY,CAAC,CAExD;AACA,GAAM,CAAAe,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAAC,IAAA,CAAqB,IAAf,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAC5BlB,aAAa,CAACkB,QAAQ,CAAC,CACzB,CAAC,CAED,mBACEjC,IAAA,CAAAI,SAAA,EAAAkB,QAAA,cACEpB,KAAA,QAAKgC,KAAK,CAAC,mIAAmI,CAAAZ,QAAA,eAC5ItB,IAAA,OAAIkC,KAAK,CAAC,8EAA8E,CAAAZ,QAAA,CAAC,YAEzF,CAAI,CAAC,cACLpB,KAAA,MAAGgC,KAAK,CAAC,uDAAuD,CAAAZ,QAAA,EAC7DJ,YAAY,cAEblB,IAAA,CAACF,aAAa,EACZqC,aAAa,CAAE,UAAW,CAC1BC,SAAS,CAAE,MAAO,CAClBT,SAAS,CAAEA,SAAW;AAAA,CACtBU,YAAY,CAAEN,UAAY;AAAA,CAC1BO,kBAAkB,CAAE,iBAAmB;AAAA,CACvCC,qBAAqB,CAAE,cAAgB;AAAA,CACvCC,iBAAiB,CAAE,UAAY;AAAA,CAChC,CAAC,EACD,CAAC,EACD,CAAC,CAGN,CAAC,CAEP,CAEA,cAAe,CAAAnC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}