{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Projects\\\\007_React2.0 TrainingProjects\\\\myapp\\\\src\\\\Components\\\\Pagination\\\\Pagination.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport JsonData from \"./usedata.json\"; // Importing sample data from a JSON file\nimport ReactPaginate from \"react-paginate\";\n\n/**\r\n * Pagination Component for displaying a list of users with pagination.\r\n * Uses ReactPaginate for page navigation.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Pagination() {\n  _s();\n  // State for the list of users and current page number\n  const [users, setUsers] = useState(JsonData.slice(0, 50)); // Initial user data, sliced to limit the number of displayed users\n  const [pageNumber, setPageNumber] = useState(0);\n\n  // Number of users to display per page and calculation for the range of users to display\n  const usersPerPage = 10; // Number of users to display on each page\n  const pagesVisited = pageNumber * usersPerPage; // Index of the first user on the current page\n\n  // Map and display the users for the current page\n  const displayUsers = users.slice(pagesVisited, pagesVisited + usersPerPage).map(user => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  });\n\n  // Calculate the total number of pages based on the user data\n  const pageCount = Math.ceil(users.length / usersPerPage);\n\n  // Function to change the current page when a pagination button is clicked\n  const changePage = ({\n    selected\n  }) => {\n    setPageNumber(selected);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"block rounded-lg bg-white p-6 shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:bg-neutral-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        class: \"mb-2 text-xl font-medium leading-tight text-neutral-800 dark:text-neutral-50\",\n        children: \"Card title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"mb-4 text-base text-neutral-600 dark:text-neutral-200\",\n        children: [displayUsers, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"Previous\",\n          nextLabel: \"Next\",\n          pageCount: pageCount // Total number of pages\n          ,\n          onPageChange: changePage // Function to handle page changes\n          ,\n          containerClassName: \"paginationBttns\" // CSS class for the pagination container\n          ,\n          previousLinkClassName: \"previousBttn\" // CSS class for the \"Previous\" button\n          ,\n          nextLinkClassName: \"nextBttn\" // CSS class for the \"Next\" button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Pagination, \"aYfHFMaeZmkBWd5uD3+vY4kLbSs=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","JsonData","ReactPaginate","jsxDEV","_jsxDEV","Fragment","_Fragment","Pagination","_s","users","setUsers","slice","pageNumber","setPageNumber","usersPerPage","pagesVisited","displayUsers","map","user","className","children","firstName","fileName","_jsxFileName","lineNumber","columnNumber","lastName","email","id","pageCount","Math","ceil","length","changePage","selected","class","previousLabel","nextLabel","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName","_c","$RefreshReg$"],"sources":["E:/React Projects/007_React2.0 TrainingProjects/myapp/src/Components/Pagination/Pagination.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport JsonData from \"./usedata.json\"; // Importing sample data from a JSON file\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n/**\r\n * Pagination Component for displaying a list of users with pagination.\r\n * Uses ReactPaginate for page navigation.\r\n */\r\nfunction Pagination() {\r\n  // State for the list of users and current page number\r\n  const [users, setUsers] = useState(JsonData.slice(0, 50)); // Initial user data, sliced to limit the number of displayed users\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n\r\n  // Number of users to display per page and calculation for the range of users to display\r\n  const usersPerPage = 10; // Number of users to display on each page\r\n  const pagesVisited = pageNumber * usersPerPage; // Index of the first user on the current page\r\n\r\n  // Map and display the users for the current page\r\n  const displayUsers = users\r\n    .slice(pagesVisited, pagesVisited + usersPerPage)\r\n    .map((user) => {\r\n      return (\r\n        <div className=\"user\" key={user.id}>\r\n          <h3>{user.firstName}</h3>\r\n          <h3>{user.lastName}</h3>\r\n          <h3>{user.email}</h3>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  // Calculate the total number of pages based on the user data\r\n  const pageCount = Math.ceil(users.length / usersPerPage);\r\n\r\n  // Function to change the current page when a pagination button is clicked\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"block rounded-lg bg-white p-6 shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:bg-neutral-700\">\r\n        <h5 class=\"mb-2 text-xl font-medium leading-tight text-neutral-800 dark:text-neutral-50\">\r\n          Card title\r\n        </h5>\r\n        <p class=\"mb-4 text-base text-neutral-600 dark:text-neutral-200\">\r\n          {displayUsers}\r\n          {/* ReactPaginate component for page navigation */}\r\n          <ReactPaginate\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            pageCount={pageCount} // Total number of pages\r\n            onPageChange={changePage} // Function to handle page changes\r\n            containerClassName={\"paginationBttns\"} // CSS class for the pagination container\r\n            previousLinkClassName={\"previousBttn\"} // CSS class for the \"Previous\" button\r\n            nextLinkClassName={\"nextBttn\"} // CSS class for the \"Next\" button\r\n          />\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"App\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}