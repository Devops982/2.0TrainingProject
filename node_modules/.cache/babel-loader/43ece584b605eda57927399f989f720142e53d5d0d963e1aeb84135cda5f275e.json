{"ast":null,"code":"import _slicedToArray from\"E:/React Projects/007_React2.0 TrainingProjects/myapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import axios from\"axios\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Pincode=function Pincode(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),postOfficeData=_useState2[0],setPostOfficeData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];useEffect(function(){axios.get(\"https://api.postalpincode.in/pincode/570001\").then(function(response){console.log(response);// Check if the response contains data and has a valid structure\nif(Array.isArray(response.data)&&response.data.length>0&&Array.isArray(response.data[0].PostOffice)&&response.data[0].PostOffice.length>0){// Access the \"PostOffice\" array\nvar postOfficeArray=response.data[0].PostOffice;// Set the post office data in the state\nsetPostOfficeData(postOfficeArray);}else{setError(new Error(\"No data found in the response.\"));}}).catch(function(err){console.error(\"Error fetching data:\",err);setError(err);});},[]);if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error.message]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"ml-96\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"List of Post Offices:\"}),/*#__PURE__*/_jsx(\"ul\",{children:postOfficeData.map(function(office,index){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",office.Name,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Branch Type:\"}),\" \",office.BranchType,/*#__PURE__*/_jsx(\"br\",{})]},index);})})]});};export default Pincode;","map":{"version":3,"names":["React","useEffect","useState","axios","jsxs","_jsxs","jsx","_jsx","Pincode","_useState","_useState2","_slicedToArray","postOfficeData","setPostOfficeData","_useState3","_useState4","error","setError","get","then","response","console","log","Array","isArray","data","length","PostOffice","postOfficeArray","Error","catch","err","children","message","className","map","office","index","Name","BranchType"],"sources":["E:/React Projects/007_React2.0 TrainingProjects/myapp/src/Api/Pincode.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Pincode = () => {\r\n  const [postOfficeData, setPostOfficeData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.postalpincode.in/pincode/570001\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        // Check if the response contains data and has a valid structure\r\n        if (\r\n          Array.isArray(response.data) &&\r\n          response.data.length > 0 &&\r\n          Array.isArray(response.data[0].PostOffice) &&\r\n          response.data[0].PostOffice.length > 0\r\n        ) {\r\n          // Access the \"PostOffice\" array\r\n          const postOfficeArray = response.data[0].PostOffice;\r\n\r\n          // Set the post office data in the state\r\n          setPostOfficeData(postOfficeArray);\r\n        } else {\r\n          setError(new Error(\"No data found in the response.\"));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching data:\", err);\r\n        setError(err);\r\n      });\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"ml-96\">\r\n      <h2>List of Post Offices:</h2>\r\n      <ul>\r\n        {postOfficeData.map((office, index) => (\r\n          <li key={index}>\r\n            <strong>Name:</strong> {office.Name}\r\n            <br />\r\n            <strong>Branch Type:</strong> {office.BranchType}\r\n            <br />\r\n            {/* Add more fields here */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pincode;\r\n"],"mappings":"2IAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAE1B,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CACpB,IAAAC,SAAA,CAA4CP,QAAQ,CAAC,EAAE,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjDG,cAAc,CAAAF,UAAA,IAAEG,iBAAiB,CAAAH,UAAA,IACxC,IAAAI,UAAA,CAA0BZ,QAAQ,CAAC,IAAI,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtBd,SAAS,CAAC,UAAM,CACdE,KAAK,CACFe,GAAG,CAAC,6CAA6C,CAAC,CAClDC,IAAI,CAAC,SAACC,QAAQ,CAAK,CAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACrB;AACA,GACEG,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACK,IAAI,CAAC,EAC5BL,QAAQ,CAACK,IAAI,CAACC,MAAM,CAAG,CAAC,EACxBH,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC,EAC1CP,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAACE,UAAU,CAACD,MAAM,CAAG,CAAC,CACtC,CACA;AACA,GAAM,CAAAE,eAAe,CAAGR,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAACE,UAAU,CAEnD;AACAd,iBAAiB,CAACe,eAAe,CAAC,CACpC,CAAC,IAAM,CACLX,QAAQ,CAAC,GAAI,CAAAY,KAAK,CAAC,gCAAgC,CAAC,CAAC,CACvD,CACF,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,GAAG,CAAK,CACdV,OAAO,CAACL,KAAK,CAAC,sBAAsB,CAAEe,GAAG,CAAC,CAC1Cd,QAAQ,CAACc,GAAG,CAAC,CACf,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIf,KAAK,CAAE,CACT,mBAAOX,KAAA,QAAA2B,QAAA,EAAK,SAAO,CAAChB,KAAK,CAACiB,OAAO,EAAM,CAAC,CAC1C,CAEA,mBACE5B,KAAA,QAAK6B,SAAS,CAAC,OAAO,CAAAF,QAAA,eACpBzB,IAAA,OAAAyB,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BzB,IAAA,OAAAyB,QAAA,CACGpB,cAAc,CAACuB,GAAG,CAAC,SAACC,MAAM,CAAEC,KAAK,qBAChChC,KAAA,OAAA2B,QAAA,eACEzB,IAAA,WAAAyB,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAACI,MAAM,CAACE,IAAI,cACnC/B,IAAA,QAAK,CAAC,cACNA,IAAA,WAAAyB,QAAA,CAAQ,cAAY,CAAQ,CAAC,IAAC,CAACI,MAAM,CAACG,UAAU,cAChDhC,IAAA,QAAK,CAAC,GAJC8B,KAML,CAAC,EACN,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAA7B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}